<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title></title>
        <description></description>
        <link></link>
        <atom:link href="/feed-cn.xml" rel="self" type="application/rss+xml" />
        
            

            
            
            <item>
                <title>2019 年读书小结</title>
                <description>&lt;style&gt;
.chart {
    width: 100%;
}

#score-chart {
    height: 640px;
}
&lt;/style&gt;

&lt;p&gt;这已经是我第 6 年写读书小结了——这又是一项我坚持了很多年的事。&lt;/p&gt;

&lt;p&gt;有的时候我想，或许正像很多人问我「&lt;strong&gt;如何坚持读书&lt;/strong&gt;」的答案一样——如果做的是一件你真正感兴趣的事，那么这只是一个&lt;em&gt;习惯&lt;/em&gt;，而非需要强大的毅力去&lt;em&gt;坚持&lt;/em&gt;的一件事。&lt;/p&gt;

&lt;p&gt;本文将总结和读书相关的内容，其他内容将会在另外一篇年度总结的博文中介绍。&lt;/p&gt;

&lt;div class=&quot;chart&quot; id=&quot;score-chart&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;今年总共读了 28 本书。&lt;/strong&gt;工作以后每年基本上都维持在 20-30 本之间的阅读量。我并不要求自己读更多书，但数量少了的话，遇到有趣的书的几率也会比较低。所以，我觉得这个数量对我来说差不多刚好。&lt;/p&gt;

&lt;h1 id=&quot;主题阅读&quot;&gt;主题阅读&lt;/h1&gt;

&lt;p&gt;今年是我比较有意识进行&lt;em&gt;主题阅读&lt;/em&gt;的第一年，主题是：&lt;strong&gt;科幻&lt;/strong&gt;与&lt;strong&gt;文学创作&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&quot;科幻作品&quot;&gt;科幻作品&lt;/h2&gt;

&lt;p&gt;去年的时候重读了《三体》，所以在年底的时候定下了今年的主题是科幻。于是，一口气读完了阿西莫夫的 5 本科幻作品——《基地》1-4 以及阿西莫夫最早的作品《苍穹微石》。结果证明，果然写作这件事是需要磨练的，大神也不例外。&lt;/p&gt;

&lt;p&gt;《基地》之前我也粗略翻过，但是没读进去。今年比较有缘分，一读就停不下来了。读完 2 的时候，我的评论是——&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;没有第一本那么震撼，但是还是足以吸引我读下一本。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;但是在短短 11 天内，又读完了第三本——&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;然而还是又读了一本，真香！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;到第 4 本已经是——&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;特别喜欢这本里面提到的不同世界的设定，和《看不见的城市》有点神似，读得停不下来。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;但是后来第 5 本拖得时间太长，导致已经不记得前面发生了什么……所以就很可惜只读了 4 本。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;另一个入坑读了这么多阿西莫夫作品的原因是，2 月份的时候，趁着 Kindle 套装打折，以 ¥59.99 的价格买了「永恒的科幻经典」这一系列 32 册电子书……&lt;/p&gt;

  &lt;p&gt;顺便说下，并不推荐购买这一系列，因为 32 本书全在一个电子书里！一级目录是 32 本书的书名，没有二级目录，所以找起来非常麻烦。更重要的是，当你看了十几个小时，进度永远是 1% 的时候，内心绝对是崩溃的！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img class=&quot;book-img&quot; src=&quot;/img/loading.gif&quot; data-src=&quot;https://images-cn.ssl-images-amazon.com/images/I/51OcmywWdiL.jpg&quot; /&gt;《基地》系列总共有 7 本，讲述的是两万年后（人类的后代已经不记得文明发源于地球的年代），整个银河系是一个庞大的帝国。但是这个帝国即将瓦解，于是，&lt;em&gt;心理史学家&lt;/em&gt;（这个词是阿西莫夫自己创造的）建立了&lt;em&gt;基地&lt;/em&gt;来帮助人类尽快度过动荡的年代，早日进入下一个和平稳定的时代。&lt;/p&gt;

&lt;p&gt;小说能吸引我不断读下去的本质原因还是叙事手法引人入胜，让我不断想知道后面（甚至是前面）发生了什么。但是，这一系列对我来说，真正的魅力在于，&lt;strong&gt;它探讨了未来是否是可以在当前推断得出的&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;在书中，阿西莫夫给出的答案是&lt;em&gt;心理史学&lt;/em&gt;可以做到这点。心理史学大致的意思是，通过心理学，从宏观上得出统计学的结论。所以，并不能得知未来某个具体的人的走向，但是可以得出宏观的人类发展。由于我只看了前 4 本，我也不知道这个心理史学只是一种类似「自我预言」的把戏（比如让人类相信基地会取得最终的胜利，从而放弃抵抗获得和平），还是另有道理。我甚至不知道阿西莫夫是否准备在后面的内容中揭晓这一答案。不过，这种探讨本身是十分有趣的。&lt;/p&gt;

&lt;p&gt;我认为&lt;strong&gt;科幻是文学作品中一个非常独特而有价值的分支&lt;/strong&gt;。虚构文学本身都在讲&lt;em&gt;虚构&lt;/em&gt;出的故事，而科幻的区别是，通常由于高科技的加持，想象力在这里可以飞得更远。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;当我们为一部科幻作品所创造出的世界惊叹的时候，我们不仅仅是在惊叹那个遥远的世界，更是在惊叹我们这个时代能创造出这样奇迹世界的那些人。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;文学创作类书籍&quot;&gt;文学创作类书籍&lt;/h2&gt;

&lt;p&gt;今年我想清楚了我这一生比较想做成的一件事——&lt;strong&gt;写作&lt;/strong&gt;。更具体地说，写一部让自己骄傲的文学作品。&lt;/p&gt;

&lt;h3 id=&quot;人生有那么多可做的事为什么偏偏是写作呢&quot;&gt;人生有那么多可做的事，为什么偏偏是写作呢？&lt;/h3&gt;

&lt;p&gt;我觉得如果我在这一生中体验了更多的可能性，是一件让我觉得非常有价值的事。对于这种「体验」而言，&lt;em&gt;环游世界&lt;/em&gt;只是一种比较低层次的方式。你可以去世界各地看不同的地理环境、风俗文化，发现甚至尝试很不一样的人生可能。但是，只要你有足够的智慧，你一定会发现，在表象千差万别的人生背后，本质却是那样的单纯而统一——所以，这只是用一种很低效的方式体验了很小的一部分人生可能性。当然，我这边不是说我们应该闭门不出，而是，我们在物理上能行走的距离越来越远的今天，是不是往往更容易忽视了我们的思维也需要散个步呢？&lt;/p&gt;

&lt;p&gt;我读的书越多，越让我相信《红楼梦》是一部最伟大的文学作品，没有之一。你看它是怎么把这么多琐碎的小事串成浑然的一体，以至于读者醉心于这些有趣的情节时往往忽视了，同样是天赋秉性异人，作为公侯小姐公子出身，和作为奴仆丫鬟出身，他们是多么不同而相似。——这便是《风月宝鉴》，不可正照。你必须看到它的背面，才能不走入它的陷阱。这种或可爱或可恨或可悲或可叹的人物，由一个真正对人性怀有慈悲之心的作者写来，正是《红楼梦》以及诸多经典之作让我觉得最为动容的。&lt;/p&gt;

&lt;p&gt;而正如我认为一个人的价值是由他的创作而非他的消费决定的。我觉得如果我也可以写一篇让自己骄傲的文学作品，那对我来说真的是一辈子的成就了。&lt;/p&gt;

&lt;p&gt;我觉得我很善于察言观色，敏感而细腻。我相信这些除了让我失眠之外，还能在一些方面提供一些正面的价值。&lt;/p&gt;

&lt;h3 id=&quot;阅读国外经典名著&quot;&gt;阅读国外经典名著&lt;/h3&gt;

&lt;p&gt;在我小学的时候，福州路那边有个书店称斤卖书，我当时买了好多后来也没怎么读的世界名著。因为当时我看小说，就是看对话内容的。心理描写？环境描写？这些要来干嘛的？最看不下去这些废话了！&lt;/p&gt;

&lt;p&gt;后来，很长一段时间，我也是很难读进去国外的小说的。很庆幸今年我觉得和这些国外的经典文学作品好像有点缘分了。虽然我不是很肯定，但我觉得纳博科夫的&lt;a href=&quot;https://book.douban.com/subject/27091776/&quot;&gt;《文学讲稿》&lt;/a&gt;起到了非常重要的作用。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;纳博科夫在这本书里讨论了《曼斯菲尔德庄园》《荒凉山庄》《包法利夫人》《化身博士》《去斯万家那边》《变形记》《尤利西斯》七部名作，相当于带领学生做了七次艺术侦查和解剖，皆以简洁明晰的语言、深入浅出的方式，极为鲜明地表达他对作品的看法，同时从文本而非观念出发，细致地捕捉和艺术特点，点明作品在艺术上成功的原因。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/27091776/&quot; target=&quot;_blank&quot;&gt;&lt;img class=&quot;book-img&quot; src=&quot;/img/loading.gif&quot; data-src=&quot;https://img9.doubanio.com/view/subject/l/public/s29767494.jpg&quot; /&gt;&lt;/a&gt;我读这本书的方法是，&lt;strong&gt;先看他对一本书一个章节的评价，再读这本书对应的章节&lt;/strong&gt;。这也是今年主题阅读的一大组成部分，就是从《文学讲稿》辐射出相关阅读书目。阅读这些世界名著，除了想学习写作之外，也是想看看文字的力量到底能够有多重，文字被使用的方式能够有多想象不到。&lt;/p&gt;

&lt;p&gt;今年读完《曼斯菲尔德庄园》、《包法利夫人》也是因为这个原因。此外，阅读了《文学讲稿》中《荒凉山庄》、《变形记》、《尤利西斯》相关章节，但《荒凉山庄》太厚了还没看完，《变形记》、《尤利西斯》则大致能明白它们的文学风格（《文学讲稿》主要侧重讲的是作者的文学风格），感觉暂时不是很想再读下去，等以后有缘的时候再读。&lt;/p&gt;

&lt;p&gt;因为我每读《文学讲稿》中的一篇需要对应读原著，所以还没读完《文学讲稿》，它也就没出现在上面的读书统计中。但是这绝对是我要五星推荐的一本书——前提是你对这些文学名著感兴趣，不然味同嚼蜡。&lt;/p&gt;

&lt;p&gt;我觉得这种阅读方式让我受益匪浅！主要是我意识到之前之所以读不进国外的文学作品，文化差异倒是其次，更主要的原因是，不太习惯西方文学中的讽刺方式。所以很多精华的讽刺我 get 不到，只当作者本意如此，也就不觉得有趣。《文学讲稿》指出一些讽刺的细节，慢慢地我就能举一反三地学会品读国外文学作品了。&lt;/p&gt;

&lt;p&gt;其他今年读的像《文学讲稿》一样起到辐射作用的书是米兰·昆德拉的&lt;a href=&quot;https://book.douban.com/subject/1063796/&quot;&gt;《小说的艺术》&lt;/a&gt;以及《Writing the Blockbuster Novel》。不过从中种草的书，我大部分还没开始读，基本作为明年的阅读书目了。&lt;/p&gt;

&lt;p&gt;《小说的艺术》中对小说和音乐的类比非常精彩——&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;事实上，所有主张复调曲式的伟大音乐家，都有一个基本原则，那就是声部之间的平等：没有任何一个声部应该突出于其他声部，没有任何一个声部应该只是单纯的伴奏。&lt;/p&gt;

  &lt;p&gt;——《小说的艺术》&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;感兴趣的朋友可以了解下什么是&lt;em&gt;复调音乐&lt;/em&gt;（然后回来再次膜拜《红楼梦》！啊，我的逻辑好跳跃……）。&lt;/p&gt;

&lt;p&gt;《Writing the Blockbuster Novel》第一章说要看完《荆棘鸟》、《飘》、《教父》、《圣彼得堡来客》四本书再往下阅读（事实上这本书说的是，最好是已经有出版过一本书再来读……），所以我先去&lt;del&gt;写了本书&lt;/del&gt;看了&lt;a href=&quot;https://book.douban.com/subject/4893071/&quot;&gt;《荆棘鸟》&lt;/a&gt;。对后者我并没有太多想介绍的，这里就摘抄一些我觉得比较心动的段落。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;也许人类不具备判断哪样更糟糕的能力：是带着烦躁不安和激动难耐的那种初生乍萌的渴望更糟呢？还是以一种顽强的劲头务求实现其独特愿望更糟呢？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;其他已读书籍&quot;&gt;其他已读书籍&lt;/h2&gt;

&lt;p&gt;讲到这里，差不多讲完了一半的书。其他并没有很多想讲的，给想打鸡血或者想要获得正能量的朋友推荐一下&lt;a href=&quot;https://book.douban.com/subject/30137430/&quot;&gt;《梵高手稿》&lt;/a&gt;吧！&lt;/p&gt;

&lt;h3 id=&quot;梵高手稿&quot;&gt;《梵高手稿》&lt;/h3&gt;

&lt;p&gt;这是一本梵高的书信集，绝大多数是给他的弟弟的。梵高在生前都一直默默无闻，经济上也像大多数艺术家一样潦倒。你会发现，他的信很大一部分在说，自己在绘画上又获得新的领悟了，感觉自己离成功更近了。从一个已知他在生前都不会获得认可的读者的角度，看到这样的信，心情真的很复杂。不得不说，他的信很多看起来都带有一种天才式的自信，让人既心疼又佩服。以下是我对该书的短评——&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;看完之后真是太感动了，梵高在书信中说希望让人感受到他的敏感和深刻——这两个词完美概括了读完本书给我的印象。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我对绘画了解不多，不知道梵高是怎样一个艺术的天才。但是，这并不影响我喜欢他的作品。而读过这本书之后，更是发现原来他的内心是这样深刻的一个人，让我尤为欣赏。&lt;/p&gt;

&lt;h1 id=&quot;你们关心的话题&quot;&gt;你们关心的话题&lt;/h1&gt;

&lt;h2 id=&quot;如何挤时间读书&quot;&gt;如何挤时间读书&lt;/h2&gt;

&lt;p&gt;这个问题我已经回答腻了，但是每次还是有人会问。简单地说——&lt;/p&gt;

&lt;h3 id=&quot;如果读书是一件你需要硬挤时间做的事那求你放过书吧&quot;&gt;如果读书是一件你需要硬挤时间做的事，那求你放过书吧！&lt;/h3&gt;

&lt;p&gt;如果你的工作很忙，到家就想摊着，玩游戏、看视频或者任何你喜欢的娱乐方式，那求你别读书了，用你喜欢的方式度过睡前的时间吧。别折磨自己了，也别折磨书了。&lt;/p&gt;

&lt;p&gt;如果你是爱读书的人，你自然能找出时间读书；如果你是高效率的人，你自然能找出时间做你想做的事；如果你真的有需要多读书充充电，即使很勉强吃力，你也能找到解决方法。剩下的，不过是一些每年年底嚷着明年要多读书的人。用现在流行的话说，就是——&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;间歇性踌躇满志，持续性混吃等死。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;当然，我觉得大部分工作后的人应该都不到非读书不可的程度。与其痛苦地纠结怎么坚持读书这件事，不如好好享受本来就不长的睡前时光吧！&lt;/p&gt;

&lt;h3 id=&quot;我是在什么时间读书的&quot;&gt;我是在什么时间读书的&lt;/h3&gt;

&lt;p&gt;和往年不同，我今年的阅读时间特别碎片化，主要还是因为业余时间更少了。&lt;/p&gt;

&lt;p&gt;因为碎片化的关系，我也更多地使用微信阅读在手机上阅读，这样就有更多的场景可以读书了。比如早晚班车上各 15 分钟，加在一起也有半小时了。晚上有空的话还能读上半小时，周末则四五个小时上不封顶。&lt;/p&gt;

&lt;p&gt;我计算了一下过去三个月的读书时间，其实平均下来也不过就是每天半小时，并没有很多。我看书也不算快，甚至可能比平均速度还低一点。&lt;/p&gt;

&lt;p&gt;如果真要说有什么秘诀的话，就是&lt;strong&gt;我从来不勉强自己为了完成每天半小时阅读之类的任务而勉强读书&lt;/strong&gt;。不想读书的时候，就做别的事娱乐一下，我不会特别功利地觉得这样浪费时间，会把这看作调整心情的有价值的方式。我觉得强迫自己完成读书任务会在心理上降低读书这件事的趣味性，所以强迫自己执行读书的计划会得不偿失。&lt;/p&gt;

&lt;p&gt;另外一个秘诀是，&lt;strong&gt;我同时在读的书可能有十几本&lt;/strong&gt;，有的是电子书有的是实体书，有的是虚构有的是非虚构，类型也差异很多。这样，就把「不想读书」的时刻转成不想读其中的某本书，说不定就有别的书想读。有的时候，一本书因为不太吸引我，被放置太久就不会再读了。我觉得这也没什么关系，本来这世界上的好书就多到读不完，这样的书放着也就放着了，等到哪天有缘的时候再拾起重读也行。当然，缺点就是小说类的比较容易忘记前文情节，非虚构类由于我会记笔记所以问题不大。当然，能不能多线程工作因人而异，你可以尝试找到一种适合自己的方式。&lt;/p&gt;

&lt;p&gt;通常来说，有一本有趣的书就会停不下来，连着几天都读。而不那么有趣的书，可能看了一页就换另一本读了。所以，当你觉得最近不太想读书的时候，不妨看看有什么别的书比较有趣，能吸引到自己。&lt;/p&gt;

&lt;h2 id=&quot;纸质书还是电子书&quot;&gt;纸质书还是电子书？&lt;/h2&gt;

&lt;p&gt;如上文所说，今年使用微信读书的比例大大增加。相应地，Kindle 略有吃灰的嫌疑，只有在微信读书里没有的书的时候再考虑。&lt;/p&gt;

&lt;p&gt;老公年会中了一个新的 Kindle，他就把他之前年会中的（哈哈哈哈）旧 Kindle 给我登录美亚账号了。我买了两本英文书（上文提到的《Writing the Blockbuster Novel》和《圣彼得堡来客》），一波操作猛如虎之后，我发现付的钱比国亚还多……我怎么就没想到先两边搜一下呢，这智商不交税谁交？&lt;/p&gt;

&lt;p&gt;一些有收藏价值的书会买实体书（今年剁手有点多了），读完后如果没价值的就多抓鱼上出掉，腾出空间买新书，耶！本来家里装修的时候我要求设计一整面的书柜的，结果由于现场发现书柜的位置在楼梯的上方，最终利用空间打造成一米多深的柜子。虽然多了好几个立方的收纳空间，但是向往整面大书柜的我只能安慰自己说，要减少自己对实体物品的拥有感，在书柜里的书并不真正属于我，读过的共鸣过的才属于我。&lt;/p&gt;

&lt;p&gt;我对纸质书还是实体书并没有偏执。我喜欢漂亮的书籍装帧和翻实体书的感觉，但是电子书由于便携性也有很大的竞争力。竹简刻书时代的人也会用各种理由拒绝相信竹简会被淘汰，但是只要我们诚实地看看历史，我们就会看到未来。&lt;/p&gt;

&lt;h2 id=&quot;阅读统计图的数据是怎么来的&quot;&gt;阅读统计图的数据是怎么来的&lt;/h2&gt;

&lt;p&gt;这个统计图用的是去年的排版，我今年基本就改了数据和配色。数据是手动统计的，方法也很简单，看一下我豆瓣上过去一年读的书评了几分，回忆一下看的是电子版还是实体书。我有记账的习惯，所以买书的费用只要在记账软件中筛选一下分类就有了。&lt;/p&gt;

&lt;h1 id=&quot;2020-阅读计划&quot;&gt;2020 阅读计划&lt;/h1&gt;

&lt;p&gt;继续阅读国外文学名著，以及相关的文学写作类书籍——这一部分的量就很大了。&lt;/p&gt;

&lt;p&gt;如果感兴趣的话，可以把家里囤了很久的古籍多读一些，比如前阵子翻翻《史记》好像有点感觉了，还有吃灰的《文选》和王维的诗集。&lt;/p&gt;

&lt;p&gt;如果我能多写点读后感就好了，好像去年也是这么说的……不过最近几个月更新读书相关的公众号文章的确是更频繁一点了，我觉得还能拯救一下。&lt;/p&gt;

&lt;p&gt;最后，如果能动动笔，练练写小说就最好了！&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    if (window.innerWidth &lt; 600) {
        var imgUrl = '/img/post/2019-12-20-reading-report.jpg';
        var img = document.createElement('img');
        img.setAttribute('class', 'single-img');
        img.setAttribute('src', imgUrl);

        var a = document.createElement('a');
        a.setAttribute('href', imgUrl);
        a.setAttribute('target', '_blank');
        a.appendChild(img);

        var container = document.getElementById('score-chart');
        container.style.height = 'auto';
        container.appendChild(a);
    }
    else {
        var loadJs = [[[
            '/js/echarts.min.js',
            '/js/sunburst.js'
        ], function() {
            var charts = [];

            var scoreChart = getScoreChart('score-chart');
            charts.push(scoreChart);

            window.onresize = function () {
                for (var i = 0; i &lt; charts.length; ++i) {
                    charts[i].resize();
                }
            };
        }]];
    }

&lt;/script&gt;

</description>
                <pubDate>Fri, 20 Dec 2019 00:00:00 +0800</pubDate>
                <link>/2019/12/20/reading-report.html</link>
                <guid isPermaLink="true">/2019/12/20/reading-report.html</guid>
            </item>
            
            
        
            

            
            
            <item>
                <title>文本处理三剑客之剑仙awk</title>
                <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;文本处理谁为峰，一见awk皆成空&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;awk&lt;/code&gt;作为&lt;code&gt;linux&lt;/code&gt;系统中文本处理三剑客中的老大，它几乎实现文本处理的一切问题。
 &lt;code&gt;awk&lt;/code&gt;与其说是一个命令，不如说它是一门语言。&lt;/p&gt;
&lt;p&gt;本文将带你走进awk的世界。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/users/1306809/matt-coughlin&quot; target=&quot;_blank&quot;&gt;Matt Coughlin&lt;/a&gt; gives a very clear &lt;a href=&quot;http://stackoverflow.com/questions/15985875/effect-of-declared-and-undeclared-variables#answer-16007360&quot; target=&quot;_blank&quot;&gt;answer&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h4 id=&quot;基本知识&quot;&gt;基本知识&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;的主要功能是过滤内容（取列）。&lt;/p&gt;

&lt;p&gt;命令一般格式：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;参数] &lt;span class=&quot;s1&quot;&gt;'[match] {script}'&lt;/span&gt; filename&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;awk常用的参数有两个：&lt;code&gt;-v&lt;/code&gt;和&lt;code&gt;-F&lt;/code&gt;。
啊？还有没有别的，不要问，肯定有，但是我不会。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-F&lt;/code&gt;比较简单，就是定义awk处理时文件一行内容中列的分隔符，如果不设置默认是空格。&lt;/p&gt;

&lt;p&gt;如文件中一行内容为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a-b-c&lt;/code&gt;，然后指定&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk -F '-' ...&lt;/code&gt;，则awk处理时就会以&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt;为第一列,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b&lt;/code&gt;为第二列……,回想一下&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;linux&lt;/code&gt;中的命令&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cut&lt;/code&gt;，它也是用来取文件中某一列内容的，他的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-d&lt;/code&gt;参数指定列分隔符，然后用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-f&lt;/code&gt;指定取那一列，如:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat test
&lt;/span&gt;a-b-c
d-e-f
g-h-k
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; 2
b
e
h&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;awk处理时可以根据&lt;code&gt;patten&lt;/code&gt;匹配特定的行进行`script`内的处理，不匹配的行则不处理。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;match&lt;/code&gt;一般格式是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/regex/&lt;/code&gt;，两条斜线建的正则表达式可以提供丰富的匹配的方式对行进行匹配处理。
如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk -F '-' '/^rex*/ {script}' filename&lt;/code&gt;就表示只处理以&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rex&lt;/code&gt;开头的行。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
    awk还提供了两个比较特殊的匹配模式，`BEGIN`和`END`。
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BEGIN {script}&lt;/code&gt;表示在文件读取所有行之前执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;script&lt;/code&gt;内容。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;END {script}&lt;/code&gt;表示在文件读取所有行之后执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;script&lt;/code&gt;内容。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;script&lt;/code&gt;内书写awk对匹配到的行要执行的命令语句，语法类&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt;语言，如:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $n}'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;意思就是打印文件&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test&lt;/code&gt;中每一行的第&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt;列。而列的定义是默认空格分割，可以使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-F&lt;/code&gt;选项指定，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt;后面可以跟&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1,2,3,...,NF-1,NF&lt;/code&gt;，其中&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NF&lt;/code&gt;表示最后一列的号码。&lt;/p&gt;

&lt;p&gt;除了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NF&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;中还有哪些特殊符号呢？&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NR&lt;/code&gt; 行号&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NF&lt;/code&gt; 最后一列列号&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ARGC&lt;/code&gt; 命令行参数个数&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ARGV&lt;/code&gt; 命令行参数数组&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ENVIRON&lt;/code&gt; 支持队列中系统环境变量的使用&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FILENAME&lt;/code&gt; awk浏览的文件名&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FNR&lt;/code&gt; 浏览文件的记录数&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FS&lt;/code&gt; 设置输入列分隔符，等价于命令行 -F选项&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OFS&lt;/code&gt; 输出列分隔符&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RS&lt;/code&gt; 输入行分隔符&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ORS&lt;/code&gt; 输出行分隔符&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;awk数组&quot;&gt;awk数组&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;的数组和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt;语言的数组其实没什么不同，只是在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;中的数组不需要&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;声明&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如现在有一个文件，里面的内容如下：&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat test
&lt;/span&gt;a-d
b-e
a-f
c-g
f-z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;每一行的两个字母构成了一个字母对，现在需要根据第一个字母进行去重，对于第一个字母相同的字母对只保留最后出现的那一个字母对。应该怎么做？&lt;/p&gt;

&lt;p&gt;使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;数组即可。&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{a[$1]=$2}END{for(k in a) print k,a[k]}'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test
&lt;/span&gt;a f
b e
c g
f z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;这里有一个问题，有些同学会将命令写为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk -F '-' 'BEGIN{a[$1]=$2}END{for(k in a) print k,a[k]}' test&lt;/code&gt;，但是这样的话会发现将什么也不输出。这是为什么呢？&lt;/p&gt;

&lt;p&gt;这就跟&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;提供的两个特殊的表达式&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BEGIN&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;END&lt;/code&gt;相关了。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;提供&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BEGIN&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;END&lt;/code&gt;的作用是在程序开始之能够初始化一些状态，在程序结束之后能够做一些扫尾工作。&lt;/p&gt;

&lt;p&gt;在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BEGIN&lt;/code&gt;之后的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{}&lt;/code&gt;内的操作将在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;开始扫描输入之前执行，而&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;END&lt;/code&gt;之后的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{}&lt;/code&gt;内的操作将在扫描完全部的输入之后执行。因此，通常使用BEGIN来显示变量和预置（初始化）变量，使用END来输出最终结果。&lt;/p&gt;

&lt;p&gt;所以很明显，这位同学写的语句中为数组赋值的语句只在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;扫描文本之前执行一遍，而在扫描文本的过程中并没有向数组中填写内容，所以没有任何输出结果。&lt;/p&gt;

&lt;p&gt;那么&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;支不支持二维数组呢？其实也支持，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;的数组可以理解为一个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;字典&lt;/code&gt;，它的索引只接受字符串，但是我们可以使用数字索引，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;内部会把数字内部索引转换为字符串。&lt;/p&gt;

&lt;p&gt;使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a[1,2]&lt;/code&gt;时代表使用了二维数组，但是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;内部会将其转换为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a[&quot;1\0342&quot;]&lt;/code&gt;。其中&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;,&lt;/code&gt;可以用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\034&lt;/code&gt;代替，也可以使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SUBSEP&lt;/code&gt;代替，它的意思是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Subscript Sepqrator&lt;/code&gt;数组下标分隔符。&lt;/p&gt;

&lt;p&gt;所以下面的几条命令是等价的:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BEGIN {Arr[2,79]=78 print Arr[&quot;2\03479&quot;]}'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BEGIN {Arr[2,79]=78 print Arr[2,79]}'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BEGIN {Arr[2,79]=78 print Arr[&quot;2\03479&quot;]}'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BEGIN {Arr[2,79]=78 idx=2 SUPBSEP 79 print Arr[idx]}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;条件和循环&quot;&gt;条件和循环&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;中的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{}&lt;/code&gt;可以书写流程控制语句，如条件语句:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;expression&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    statement&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    statement&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    ... ...
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;expression&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    statement&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    statement2&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;expression&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    statement1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;expression1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    statement2&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    statement3&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;条件语句中常使用的逻辑运算符也跟&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt;语言一样，如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt;表示且等。&lt;/p&gt;

&lt;p&gt;循环:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;expression&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    statement
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;k &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;arrary&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    statement
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;中的循环和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt;语言基本相同，都可以使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;break&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;continue&lt;/code&gt;等有语句。&lt;/p&gt;

&lt;h4 id=&quot;实验&quot;&gt;实验&lt;/h4&gt;

&lt;p&gt;下面来介绍一个小例子，说明&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;的强大应用，取出下列文本中电话号码并进行去重。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat test
&lt;/span&gt;a-111111-hgehe
b-222222-popop
c-111111-cdsfs
d-123456-rtryr
a-245124-bdfef
c-123456-aaads
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cut&lt;/code&gt;命令:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; - &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; 2 &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;uniq&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;
      1
      1 a hehe a
      1 b hehe b
      1 c hehe c
      2 c hehe d
      2 f hehe f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;也可以使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $2}'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;uniq&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;zcat brec_likee_mixer_d.log.[1-9].gz&lt;/td&gt;
      &lt;td&gt;grep ‘rrk_bd_exp1’&lt;/td&gt;
      &lt;td&gt;awk -F ‘recall ts:’ ‘{print$2}’&lt;/td&gt;
      &lt;td&gt;cut -d ‘ ‘ -f 1&lt;/td&gt;
      &lt;td&gt;awk ‘{sum+=$1}END{print(sum/NR)}’&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;function __readINI() {
    INIFILE=$1; SECTION=$2; ITEM=$3
    #res=&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk -F '=' '{if($0~/^\['$SECTION'\]\s*$/){a=1}else if(a==1&amp;amp;&amp;amp;$1==&quot;'$ITEM'&quot;){print $2;exit}else if(a==1&amp;amp;&amp;amp;($0~/^\[/||$0~/^$/))exit}' $INIFILE&lt;/code&gt;
    res=&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk -F '=' '{if($0~/^\['$SECTION'\]\s*$/){a=1}else if(a==1&amp;amp;&amp;amp;$1==&quot;'$ITEM'&quot;){for(i=2;i&amp;lt;NF;i++){printf(&quot;%s=&quot;,$i)};print $NF;exit}else if(a==1&amp;amp;&amp;amp;$0~/^\[/)exit}' $INIFILE&lt;/code&gt;
    if [[ -z &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;echo $res&lt;/code&gt; ]];then
        SECTION=globalParamDefault
        res=&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk -F '=' '{if($0~/^\['$SECTION'\]\s*$/){a=1}else if(a==1&amp;amp;&amp;amp;$1==&quot;'$ITEM'&quot;){for(i=2;i&amp;lt;NF;i++){printf(&quot;%s=&quot;,$i)};print $NF;exit}else if(a==1&amp;amp;&amp;amp;$0~/^\[/)exit}' $INIFILE&lt;/code&gt;
    fi
    echo $res
}&lt;/p&gt;

&lt;h3 id=&quot;参考链接&quot;&gt;参考链接&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/panpan639944806/article/details/19932543&quot;&gt;awk的BEGIN和END&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
                <pubDate>Tue, 07 Nov 2017 00:00:00 +0800</pubDate>
                <link>/2017/11/07/awk.html</link>
                <guid isPermaLink="true">/2017/11/07/awk.html</guid>
            </item>
            
            
        
    </channel>
</rss>
