<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2020-12-14T14:59:52+08:00</updated><id>/feed.xml</id><title type="html">Blog of Lonny</title><subtitle></subtitle><entry><title type="html">文本处理三剑客之剑仙awk</title><link href="/2017/11/07/awk.html" rel="alternate" type="text/html" title="文本处理三剑客之剑仙awk" /><published>2017-11-07T00:00:00+08:00</published><updated>2017-11-07T00:00:00+08:00</updated><id>/2017/11/07/awk</id><content type="html" xml:base="/2017/11/07/awk.html">&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;文本处理谁为峰，一见awk皆成空&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;awk&lt;/code&gt;作为&lt;code&gt;linux&lt;/code&gt;系统中文本处理三剑客中的老大，它几乎实现文本处理的一切问题。
 &lt;code&gt;awk&lt;/code&gt;与其说是一个命令，不如说它是一门语言。&lt;/p&gt;
&lt;p&gt;本文将带你走进awk的世界。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/users/1306809/matt-coughlin&quot; target=&quot;_blank&quot;&gt;Matt Coughlin&lt;/a&gt; gives a very clear &lt;a href=&quot;http://stackoverflow.com/questions/15985875/effect-of-declared-and-undeclared-variables#answer-16007360&quot; target=&quot;_blank&quot;&gt;answer&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h4 id=&quot;基本知识&quot;&gt;基本知识&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;的主要功能是过滤内容（取列）。&lt;/p&gt;

&lt;p&gt;命令一般格式：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;参数] &lt;span class=&quot;s1&quot;&gt;'[match] {script}'&lt;/span&gt; filename&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;awk常用的参数有两个：&lt;code&gt;-v&lt;/code&gt;和&lt;code&gt;-F&lt;/code&gt;。
啊？还有没有别的，不要问，肯定有，但是我不会。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-F&lt;/code&gt;比较简单，就是定义awk处理时文件一行内容中列的分隔符，如果不设置默认是空格。&lt;/p&gt;

&lt;p&gt;如文件中一行内容为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a-b-c&lt;/code&gt;，然后指定&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk -F '-' ...&lt;/code&gt;，则awk处理时就会以&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt;为第一列,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b&lt;/code&gt;为第二列……,回想一下&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;linux&lt;/code&gt;中的命令&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cut&lt;/code&gt;，它也是用来取文件中某一列内容的，他的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-d&lt;/code&gt;参数指定列分隔符，然后用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-f&lt;/code&gt;指定取那一列，如:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat test
&lt;/span&gt;a-b-c
d-e-f
g-h-k
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; 2
b
e
h&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;awk处理时可以根据&lt;code&gt;patten&lt;/code&gt;匹配特定的行进行&lt;code&gt;script&lt;/code&gt;内的处理，不匹配的行则不处理。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;match&lt;/code&gt;一般格式是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/regex/&lt;/code&gt;，两条斜线建的正则表达式可以提供丰富的匹配的方式对行进行匹配处理。
如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk -F '-' '/^rex*/ {script}' filename&lt;/code&gt;就表示只处理以&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rex&lt;/code&gt;开头的行。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
    awk还提供了两个比较特殊的匹配模式，`BEGIN`和`END`。
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BEGIN {script}&lt;/code&gt;表示在文件读取所有行之前执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;script&lt;/code&gt;内容。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;END {script}&lt;/code&gt;表示在文件读取所有行之后执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;script&lt;/code&gt;内容。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;script&lt;/code&gt;内书写awk对匹配到的行要执行的命令语句，语法类&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt;语言，如:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print($n)}'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;意思就是打印文件&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test&lt;/code&gt;中每一行的第&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt;列。而列的定义是默认空格分割，可以使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-F&lt;/code&gt;选项指定，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt;后面可以跟&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1,2,3,...,NF-1,NF&lt;/code&gt;，其中&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NF&lt;/code&gt;表示最后一列的号码。&lt;/p&gt;

&lt;p&gt;除了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NF&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;中还有哪些特殊符号呢？&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NR&lt;/code&gt; 行号&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NF&lt;/code&gt; 最后一列列号&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ARGC&lt;/code&gt; 命令行参数个数&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ARGV&lt;/code&gt; 命令行参数数组&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ENVIRON&lt;/code&gt; 支持队列中系统环境变量的使用&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FILENAME&lt;/code&gt; awk浏览的文件名&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FNR&lt;/code&gt; 浏览文件的记录数&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FS&lt;/code&gt; 设置输入列分隔符，等价于命令行 -F选项&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OFS&lt;/code&gt; 输出列分隔符&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RS&lt;/code&gt; 输入行分隔符&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ORS&lt;/code&gt; 输出行分隔符&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;awk数组&quot;&gt;awk数组&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;的数组和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt;语言的数组其实没什么不同，只是在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;中的数组不需要&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;声明&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如现在有一个文件，里面的内容如下：&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat test
&lt;/span&gt;a-d
b-e
a-f
c-g
f-z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;每一行的两个字母构成了一个字母对，现在需要根据第一个字母进行去重，对于第一个字母相同的字母对只保留最后出现的那一个字母对。应该怎么做？&lt;/p&gt;

&lt;p&gt;使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;数组即可。&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{a[$1]=$2}END{for(k in a) print k,a[k]}'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test
&lt;/span&gt;a f
b e
c g
f z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;这里有一个问题，有些同学会将命令写为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk -F '-' 'BEGIN{a[$1]=$2}END{for(k in a) print k,a[k]}' test&lt;/code&gt;，但是这样的话会发现将什么也不输出。这是为什么呢？&lt;/p&gt;

&lt;p&gt;这就跟&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;提供的两个特殊的表达式&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BEGIN&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;END&lt;/code&gt;相关了。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;提供&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BEGIN&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;END&lt;/code&gt;的作用是在程序开始之能够初始化一些状态，在程序结束之后能够做一些扫尾工作。&lt;/p&gt;

&lt;p&gt;在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BEGIN&lt;/code&gt;之后的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{}&lt;/code&gt;内的操作将在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;开始扫描输入之前执行，而&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;END&lt;/code&gt;之后的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{}&lt;/code&gt;内的操作将在扫描完全部的输入之后执行。因此，通常使用BEGIN来显示变量和预置（初始化）变量，使用END来输出最终结果。&lt;/p&gt;

&lt;p&gt;所以很明显，这位同学写的语句中为数组赋值的语句只在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;扫描文本之前执行一遍，而在扫描文本的过程中并没有向数组中填写内容，所以没有任何输出结果。&lt;/p&gt;

&lt;p&gt;那么&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;支不支持二维数组呢？其实也支持，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;的数组可以理解为一个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;字典&lt;/code&gt;，它的索引只接受字符串，但是我们可以使用数字索引，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;内部会把数字内部索引转换为字符串。&lt;/p&gt;

&lt;p&gt;使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a[1,2]&lt;/code&gt;时代表使用了二维数组，但是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;内部会将其转换为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a[&quot;1\0342&quot;]&lt;/code&gt;。其中&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;,&lt;/code&gt;可以用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\034&lt;/code&gt;代替，也可以使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SUBSEP&lt;/code&gt;代替，它的意思是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Subscript Sepqrator&lt;/code&gt;数组下标分隔符。&lt;/p&gt;

&lt;p&gt;所以下面的几条命令是等价的:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BEGIN {Arr[2,79]=78 print Arr[&quot;2\03479&quot;]}'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BEGIN {Arr[2,79]=78 print Arr[2,79]}'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BEGIN {Arr[2,79]=78 print Arr[&quot;2\03479&quot;]}'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BEGIN {Arr[2,79]=78 idx=2 SUPBSEP 79 print Arr[idx]}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;条件和循环&quot;&gt;条件和循环&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;中的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{}&lt;/code&gt;可以书写流程控制语句，如条件语句:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;expression&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    statement&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    statement&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    ... ...
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;expression&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    statement&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    statement2&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;expression&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    statement1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;expression1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    statement2&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    statement3&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;条件语句中常使用的逻辑运算符也跟&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt;语言一样，如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt;表示且等。&lt;/p&gt;

&lt;p&gt;循环:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;expression&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    statement
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;k &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;arrary&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    statement
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;中的循环和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt;语言基本相同，都可以使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;break&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;continue&lt;/code&gt;等有语句。&lt;/p&gt;

&lt;h4 id=&quot;实验&quot;&gt;实验&lt;/h4&gt;

&lt;p&gt;下面来介绍一个小例子，说明&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;的强大应用，取出下列文本中电话号码并进行去重。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat test
&lt;/span&gt;a-111111-hgehe
b-222222-popop
c-111111-cdsfs
d-123456-rtryr
a-245124-bdfef
c-123456-aaads
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cut&lt;/code&gt;命令:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cut&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; - &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; 2 &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;uniq&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;
      1
      1 a hehe a
      1 b hehe b
      1 c hehe c
      2 c hehe d
      2 f hehe f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;也可以使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $2}'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;uniq&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;zcat brec_likee_mixer_d.log.[1-9].gz&lt;/td&gt;
      &lt;td&gt;grep ‘rrk_bd_exp1’&lt;/td&gt;
      &lt;td&gt;awk -F ‘recall ts:’ ‘{print$2}’&lt;/td&gt;
      &lt;td&gt;cut -d ‘ ‘ -f 1&lt;/td&gt;
      &lt;td&gt;awk ‘{sum+=$1}END{print(sum/NR)}’&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;function __readINI() {
    INIFILE=$1; SECTION=$2; ITEM=$3
    #res=&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk -F '=' '{if($0~/^\['$SECTION'\]\s*$/){a=1}else if(a==1&amp;amp;&amp;amp;$1==&quot;'$ITEM'&quot;){print $2;exit}else if(a==1&amp;amp;&amp;amp;($0~/^\[/||$0~/^$/))exit}' $INIFILE&lt;/code&gt;
    res=&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk -F '=' '{if($0~/^\['$SECTION'\]\s*$/){a=1}else if(a==1&amp;amp;&amp;amp;$1==&quot;'$ITEM'&quot;){for(i=2;i&amp;lt;NF;i++){printf(&quot;%s=&quot;,$i)};print $NF;exit}else if(a==1&amp;amp;&amp;amp;$0~/^\[/)exit}' $INIFILE&lt;/code&gt;
    if [[ -z &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;echo $res&lt;/code&gt; ]];then
        SECTION=globalParamDefault
        res=&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk -F '=' '{if($0~/^\['$SECTION'\]\s*$/){a=1}else if(a==1&amp;amp;&amp;amp;$1==&quot;'$ITEM'&quot;){for(i=2;i&amp;lt;NF;i++){printf(&quot;%s=&quot;,$i)};print $NF;exit}else if(a==1&amp;amp;&amp;amp;$0~/^\[/)exit}' $INIFILE&lt;/code&gt;
    fi
    echo $res
}&lt;/p&gt;

&lt;h3 id=&quot;参考链接&quot;&gt;参考链接&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/panpan639944806/article/details/19932543&quot;&gt;awk的BEGIN和END&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="linux" /><summary type="html">工欲善其事，必先利其器。初次使用linux就被文本处理三剑客以及编辑器之神vim所折服。</summary></entry></feed>